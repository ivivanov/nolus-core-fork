name: Build
# Builds new binary and creates release draft.
# A version is denoted with a protected tag.
on:
  push:
    # Only tags which match the protected tag pattern will trigger this workflow
    tags:
      - v*.*.*

env:
  VERSION_TAG: ${{ github.ref_name }}
  ARTIFACT_BIN: "nolus.tar.gz"
  AWS_REGISTRY_ID: "013603813222"
  AWS_REGION: "us-east-1"
  ERC_REGISTRY: "public.ecr.aws"
  ERC_REGISTRY_ALIAS: "nolus"
  ERC_REPOSITORY: "builder"
  # make sure to update build-binary container tag as well
  IMAGE_TAG: "1.21.6"
  DOCKERFILE: ".github/images/builder.Dockerfile"
  CHECKSUM_FILE: "sha256sum.txt"
  METADATA_FILE: "output.json"

jobs:
  # Checks if builder image exists in docker registry
  builder-exists:
    name: Builder exists
    runs-on: ubuntu-latest
    container: amazon/aws-cli
    outputs:
      # 'failure' -  when no image with such tag exists
      # 'success' - image exists
      status: ${{ steps.check.outcome }}

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Run check exist image
        id: check
        continue-on-error: true
        run: |
          aws ecr-public describe-images \
              --registry-id $AWS_REGISTRY_ID \
              --repository-name $ERC_REPOSITORY \
              --region $AWS_REGION \
              --image-ids=imageTag=$IMAGE_TAG

  # Builds and pushed builder image if it does not exist
  builder-create:
    name: Create builder image
    needs: builder-exists
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Create new image
        shell: bash
        run: |
          if [[ ${{ needs.builder-exists.outputs.status }} == 'failure' ]]
          then
            docker build -t $ERC_REGISTRY/$ERC_REGISTRY_ALIAS/$ERC_REPOSITORY:$IMAGE_TAG -f $DOCKERFILE .
            docker push $ERC_REGISTRY/$ERC_REGISTRY_ALIAS/$ERC_REPOSITORY:$IMAGE_TAG
          else
            echo "Image version $IMAGE_TAG exists. Skipping step..."
          fi

  # Builds new version of the binary.
  build-binary:
    name: Build binary
    needs: builder-create
    runs-on: ubuntu-latest
    container:
      # image name needs to be hardcoded: https://github.com/orgs/community/discussions/26324
      image: "public.ecr.aws/nolus/builder:1.21.6"

    steps:
      - uses: actions/checkout@v3

      # This is to fix GIT not liking owner of the checkout dir
      # Happens when executing not into the default container
      - name: Set ownership
        run: |
          chown -R $(id -u):$(id -g) $PWD

      - name: Run build binary
        run: |
          make build
          echo "Ensuring binary is statically linked ..."
          file target/release/nolusd | grep "statically linked"

      - name: Prepare binary tar
        run: |
          tar -C target/release/ -czvf $ARTIFACT_BIN .

      # - name: Upload binary tar
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: nolusd-${{ env.VERSION_TAG }}
      #     path: ${{ env.ARTIFACT_BIN }}

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: nolusd-${{ env.VERSION_TAG }}
          path: target/release/nolusd

  # Add metadata for cosmovisor
  add-meta:
    name: Add metadata
    needs: build-binary
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Display structure of downloaded files
        run: ls -R

      - name: Get binary checksum
        run: |
          CHECKSUM=$(shasum -a 256 nolusd-"${VERSION_TAG}"/nolusd)
          echo "$CHECKSUM" > $CHECKSUM_FILE
          JSON="{\"binaries\": {\"linux/amd64\": \"https://github.com/nolus-protocol/nolus-core/releases/download/${VERSION_TAG}/nolusd?checksum=${CHECKSUM}\"}}"
          echo $JSON > ${METADATA_FILE}


      - name: Upload metadata
        uses: actions/upload-artifact@v4
        with:
          name: nolusd-${{ env.VERSION_TAG }}
          path: |
            ${{ env.METADATA_FILE }}
            ${{ env.CHECKSUM_FILE }}
          compression-level: 0 # no compression

  # Drafts a release
  release:
    name: Draft release
    runs-on: ubuntu-latest
    needs: build-binary
    permissions: write-all

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Display structure of downloaded files
        run: ls -R

      # temporary using commit as version until it is merged. Updates node version v12 -> v16
      - uses: "marvinpinto/action-automatic-releases@6273874b61ebc8c71f1a61b2d98e234cf389b303"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          draft: true
          files: |
            nolusd-${{ env.VERSION_TAG }}
